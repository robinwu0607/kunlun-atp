变更记录
============
v22.8.1
-----------
1. 优化session连接的交互方案。

v22.8.0
-----------
1. 增加对license的支持。管理面板view->license可以查看license信息。
2. 增加.add_station(dense=False)参数, 当dense=True时, container面板为精简模式, 仅显示时间信息。
3. 平台需要D盘, 启动控制面板前, 先检查是否存在D盘, 若不存在, 报错提示。
4. 移除 测试开发-自动编排用例。
5. 移除 ``lib.set_test_name()``。
6. 增加测试界面支持中英文语言切换。
7. 增加测试代码的打包(二进制化)支持。
6. 一些其他更新。

v22.5.0
----------
1. 移除接口函数：``lib.add_chart_data()``。
2. 移除 **Pack & Deploy** 页面。
3. 增加接口函数：``lib.set_step_name()``, 未来将移除 ``lib.set_test_name()``。
4. TestData页面, 默认展示一周的测试数据。
5. 若手工停止测试, 将会产生 ``A`` 记录。
6. 移除本地文档, 减少安装包体积。

v22.4.2
----------
1. 改进send(), 当expect为list时, 收到其中任意一元素即可, 当expect为tuple时, 需要收到所有元素方可。

v22.4.1
----------
1. 增加测试时间后台自动更新, 使测试界面上的测试时长更精确。

v22.4.0
----------
1. 增加QQ讨论群。

v22.1.1
----------
1. 增加对串口serial HEX方式交互的支持, 设置方法为：``add_connection(protocol="SERIAL-HEX")`` .

v22.1.0
---------
1. 增加导入python pypi包的说明。
2. 更新版本命名方案

v1.12.1
-----------
1. 更新接口函数 ``lib.get_sequencer_definition()`` , 增加 ``自动发现用例`` 模式。
2. TODO: 增加对 ``JWT`` 的支持。

v1.12.0
-----------
1. ``sequencer`` 每个用例用时精确到小数点2位。
2. 增加 **调试功能** , 当 ``container`` 在 ``非测试`` 状态时, 可以手工调试命令行。
3. 增加接口函数 ``lib.set_chart_data()`` , 将数据以图形方式在界面上呈现出来。
4. 在测试记录查询页面增加测试报告页面。

v1.11.1
---------
1. 增加 ``ftp`` & ``tftp`` 服务。
2. 增加 ``hostname.py`` 加载错误提示。
3. 增加接口函数 ``lib.start_container_test()`` , 可以使用一个container启动另一个container测试。
4. 增加接口函数 ``lib.get_allocation()`` , 更精细化的配置用户界面。

v1.11.0
---------
1. 增加接口函数 ``lib.ud`` , ud代表userdict, 是一个用户字典, 可以使用 ``.`` 来随意增加键值对。
2. 更新接口函数 ``lib.get_xlsx_params(sheet, name)`` , 当name以通配符  ``*``  起始或结尾, 或等于时, 返回一个字典。
3. XLSX文件(params.xlsx & meas.xlsx)增加 ``desc`` 字段, 用来描述 ``name`` 的实际意义。
4. ``add_step()`` 可以接受 ``kwargs`` 参数。
5. 引入https。

v1.10.2
---------
1. 更新接口函数 ``lib.get_sequencer_definition()`` , 可支持若干测试策略。
2. 增加接口函数 ``lib.set_sequencer_data()`` , 增加当前step的sequencer数据。
3. 增加接口函数 ``lib.get_sequencer_data()`` , 获取 ``sequencer`` 的执行数据, json格式。
4. 增加接口函数 ``lib.xlsx_measure()`` , 根据XLSX ``meas.xlsx`` 中指标数据对实际测量值进行检查。

v1.10.1
---------
1. (TODO)使用Jupyter Lab作为web IDE, 支撑远程开发测试程序.
2. 增加接口函数 ``lib.ask_questions()`` , 一次提问多个问题.
3. hostname功能中增加 ``recycle`` 参数, 为 ``True`` 时, 测试完成后, 将自动重新开始.
4. 增加对.NET文件(.dll)的调用支持.

v1.10.0
---------
1. 增加接口函数 ``lib.get_xlsx_params()``.
2. 增加logo.

v1.9.0
---------
1. 版本命名采用新方案：v1.9.0, 1代表2021年, 9代表9月, 0代表当月发布的正式版本(其他数字表示补丁版本).
2. 增加接口函数 ``lib.get_params()`` 与 ``lib.get_sequencer_definition()`` .

v0.1.6_20210828
----------------
1. 增加管理面板, 方便用户操作, 监控后台服务运行状态。

v0.1.5_20210808
-------------------
1. 解决Issue I43JLW, 重新设计打包方案。
2. 增加用户界面设置方案, 详情参考文档。

v0.1.4_20210627
-------------------
1. 完成连接 TELNET & SERIAL 的验证, 修复部分BUG, 这两个连接已被证明是可靠的。

v0.1.3_20210615
-------------------
1. 完成连接 DUMMY & SSH 的验证, 修复部分BUG, 这两个连接已被证明是可靠的。

v0.1.2_20210606
-------------------
1. 更新部分帮助文档。
2. 增加手工命令行调试窗口。
3. 部分代码更新。

v0.1.1_20210516
-------------------
v0.1.1正式发布, 项目以安装文件形式发布。

1. 安装目录必须为：``C:\Program Files (x86)\KunLun ATP``。
2. 项目所有数据保存在：``D:\kunlun-data``, 项目启动过程中会自动创建此目录。
3. 安装过程中, 选择创建桌面快捷方式。安装完成后, 桌面将有 ``Start KunLun`` 与 ``Stop KunLun`` 两个快捷方式。
4. 双击 ``Start KunLun`` 启动项目, 双击 ``Stop KunLun`` 将停止项目。
5. 打开浏览器(谷歌或者是Edge), 地址栏输入: ``http://localhost:9000`` , 进入用户界面。
6. 有任何问题, 请开 [Issues](https://gitee.com/robinwu0607/kunlun-atp/issues) 。
